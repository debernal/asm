; Implements Graphic User Interface Hanoi Towers Game in asm language for Borland Turbo ASM
; Programmer: David Bernal Michelena
; Created on June 5, 2007
; Must be executed on Win 7 
; License: CREATIVE COMMONS LICENSE BY-NC https://creativecommons.org/licenses/by-nc/4.0/

GOTOXY MACRO X, Y
    MOV BH, 0	;despliega el numero de pagina
    MOV DH, Y	;numero de renglon
    MOV DL, X	;numero de columna
    MOV AH, 2	;posiciona el cursor
    INT 10H
ENDM

INIASI MACRO
	MOV DH, NUMDIS  ; inicializa la variable col en función del numero de discos col= incol(5) + nd
	SUB DH, 30H	;
	ADD DH, INCOL
	MOV COL, DH
	MOV ROW, 17 
ENDM

INICIACONTADORES MACRO
			;las variables se inicializan cuando se da la opción reiniciar.
    MOV ROW, 17		;variables torre
    MOV COL, 5
    MOV INCOL, 5
    MOV CC, 0
    MOV CR, 0
    MOV AC, 0
    MOV LEN, 0
    MOV MEN, 0
    MOV C1, 0
    
    MOV DESP, 0		;variables palos
    MOV CY, 0
    
    MOV GANA, 0		;variable ganador
    
    MOV CONUNI, 0
    MOV CONDEC, 0
    MOV CONCEN, 0
ENDM


BORRAPANTALLA MACRO
    MOV ROW, 0       
  CICLOBOR:
	GOTOXY 0,ROW
	CLEAR
	INC ROW
	CMP ROW, 25
	JNE CICLOBOR
ENDM 	
	

IMPMEN MACRO CADENA
   LEA DX, CADENA
   MOV AH, 9
   INT 21H
ENDM

CLEAR MACRO
    LEA DX, MENCLR
    MOV AH, 9
    INT 21H
ENDM

IMPRIME MACRO CON
  MOV DL, CON       ; CONVIERTE UN NUMERO A CARACTER Y LO IMPRIME
  ADD DL, 30H          
  MOV AH, 2
  INT 21H
ENDM

IMPTIE MACRO 
	sub ah, ah  ; pone ah=0
	mov bl, 10  ; obtiene el primer digito
	div bl		; cociente en al, el resto en ah
	add al, 30h ; obtiene el numero
	mov dl, al	; lo prepara para desplegarlo
	push ax		; almacena el valor
	mov ah,2	; despliega el caracter en pantalla
	int 21h
	pop ax		; obtiene el primer dígito en la pila
	add ah,30h	; ah puso el residuo y lo convierte a numero
	mov dl, ah	; imprime
	mov ah,2	; en pantalla
	int 21h
ENDM

ORG 100H
.model medium
.data


;VARIABLES DE CADENA
MENBIE db "TORRES DE HANOI: UN RETO A TU INTELIGENCIA $"
	   DB "	OPRIME CUALQUIER TECLA PARA EMPEZAR$"	
MENORI DB "  DAME LA TORRE ORIGEN: $"
MENDES DB "  DAME LA TORRE DESTINO: $"
MENERRVAC DB "ERROR: TORRE VACIA - PRESIONA CUALQUIER TECLA$"
MENERRTAM DB "ERROR: NO PUEDES COLOCAR UN DISCO SOBRE UNO DE MENOR TAMANO!! $"
MENCLR DB "                                                                                $"
MENGAN DB " FELICIDADES, HAS GANADO !!!  ERES EXCELENTE !!!  TECLEA S o R$"
MENMOV DB "No. DE MOVIMIENTOS:   $"
MENTOR DB "TORRE 1                  TORRE 2                  TORRE 3$"
MENTIE DB "TIEMPO: $"
MENSEG DB "SEG: $"
MENMIN DB "MIN: $"
MENHOR DB "HOR: $"
MENNUMDIS	DB "DAME EL NUMERO DE DISCOS [3,9]: $"
MENPRO DB " AUTOR:  DAVID EDUARDO BERNAL MICHELENA", 10, 13
	  DB "		FACULTAD DE INGENIERIA", 10, 13
	  DB "		UNAM $"
	  
MENINS DB "OBJETIVO: DEBES PASAR TODOS LOS DISCOS DE LA TORRE 1 A LA TORRE 3 ", 10, 13, 10, 13
	   DB "	    REGLAS:", 10, 13, 10, 13
	   DB "	      1.- NO PUEDES MOVER MAS DE UN DISCO A LA VEZ", 10, 13
	   DB " 	      2.- NO PUEDES COLOCAR UN DISCO SOBRE UNO DE MENOR TAMANO ", 10, 13, 10, 13, 10, 13
	   DB "		OPRIME CUALQUIER TECLA PARA EMPEZAR$"
	
MENOPC DB "SALIR: S - REINICIAR: R$"		


;VARIABLES TORRE
row db 17
col db 5
incol db 5
color db 1
CC DB 0
CR DB 0
AC DB 0
AR DB 0
LEN DB 0
MEN DB 0
C1 DB 0

;VARIABLES PALOS
DESP DB 0
CY DB 0

;VARIABLES MOVER
PASA DB 0

;VARIABLES SALVA
TEMPX DB ?
TEMPY DB ?
TEMATR DB ?

;VARIABLES LON
CLON DB 0

;VARIABLE GRAL
BAND DB 0
VALORI DB 30
NUMDIS DB 0

;VARIABLE IMPRIME
CIM DB 0

;VARIABLE COLOCA
LONTOT DB 0
CCOL DB 0
CONUNI DB 0
CONDEC DB 0
CONCEN DB 0

;VARIABLE BORRA
CBOR DB 0

;VARIABLES HORA
INIHOR DB 0
INIMIN DB 0
INISEG DB 0
FINMIN DB 0
FINSEG DB 0
FINHOR DB 0

;VARIABLES GANADOR
GANA DB 0

.CODE
ORG 100H
inicio:
    MOV AX, @DATA
    MOV DS, AX
    MOV AH, 0		;configura el modo de video
    MOV AL, 3		;80x25 color, eleccion de pantalla 80 caracteres en columna y 25 en renglon
    INT 10H
   
    INICIACONTADORES
   
    GOTOXY 15, 1
    IMPMEN MENPRO
    
    GOTOXY 7, 6
    IMPMEN MENBIE
    
    GOTOXY 7, 10
    IMPMEN MENINS
    
    
    MOV AH, 1
    INT 21H
    
    
REINICIAR:
    MOV AX, @DATA
    MOV DS, AX
    MOV AH, 0		;necesario para evitar errores de atributo al reiniciar
    MOV AL, 3		
    INT 10H
    
    INICIACONTADORES
    BORRAPANTALLA
    MOV ROW, 17    ;la macro borrapantalla cambió el valor de row, por eso se iniciliza en 17 nuevamente.
    JMP IMPMENSAJES
    
REINICIAR2:
	JMP REINICIAR
    
IMPMENSAJES:
    GOTOXY 25, 2
    IMPMEN MENOPC
    
    GOTOXY 55, 4
    IMPMEN MENMOV
   
    GOTOXY 8, 6
    IMPMEN MENTOR
    
    GOTOXY 5, 20
    
   IMPMEN MENNUMDIS
	JMP LEEDISCOS

FINLIMPIA:
	MOV ROW, 0       
	CICLOBOR1:
	GOTOXY 0,ROW
		LEA DX, MENCLR
		MOV AH, 9
		INT 21H
	INC ROW
	CMP ROW, 25
	JNE CICLOBOR1
	JMP FIN3
  
  REINICIAR3:
  JMP REINICIAR2
  
   LEEDISCOS:
    MOV AH, 7
    INT 21H
    MOV NUMDIS, AL		;lee del teclado el número de discos y  lo coloca en NUMDIS
    CMP NUMDIS, 'R'
    JE REINICIAR3
	CMP NUMDIS, 'r'
    JE REINICIAR3
    CMP NUMDIS, 'S'
    ;JE FIN3
	JE FINLIMPIA
	CMP NUMDIS, 's'
    ;JE FIN3
	JE FINLIMPIA
    CMP NUMDIS, '3'
    JB LEEDISCOS
    CMP NUMDIS, '9'
    JA LEEDISCOS
    
    GOTOXY 5, 20
    IMPMEN MENCLR
    
    mov ah, 2ch  ;lee la hora del sistema
int 21h
	MOV INIHOR, CH
	MOV INIMIN, CL
	MOV INISEG, DH
	JMP PALOS

fin3:
     
	mov ah,4ch
      Int 21h
  
   
PALOS:
    CICLO:
        MOV BH, 0	;despliega el numero de pagina
 	mov dh,row   ;numero de renglon
  	mov dl,col   ;numero de columna
  	ADD DL, NUMDIS
  	SUB DL, 30H
  	ADD DL, DESP
	MOV AH, 2 	;configura la pos del cursor
 	int 10h
  	mov al,'°'   ;escribe * de color GRIS;
  	MOV BL, 8  ; EL COLOR DEL PALO INICIAL ES 8, GRIS	 
  	mov cx,1    ; SE  IMPRIME UN CARACTER	 
  	mov ah,9
  	int 10h
  	INC CY
  	DEC ROW
  	CMP CY, 10   ; EL ARGUMENTO DERECHO ES LA ALTURA DE PALO
  	JNE CICLO
    ;END CICLO
    MOV CY, 0
    ADD DESP, 25
    CMP DESP, 75	;SE IMPRIMEN TRES PALOS, ESPACIADOS 25 UNIDADES 
    MOV ROW, 17
    JNE PALOS
	
TORRE:  
  CICLO1:
  	 mov ah,2 	;configura la pos del cursor
         mov bh,0	;despliega el numero de pagina
 	 mov dh,row   ;numero de renglon
  	 mov dl,col   ;numero de columna
  	 inc col
 	 int 10h
  	 mov al,'°'   ;escribe * de color;
  	 MOV BL, 9   ; EL COLOR DEL DISCO INICIAL ES 9, AZUL	 
  	 ADD bl, C1  ; EL COLOR DEL DISCO CAMBIA CADA QUE EL CICLO EXTERNO ITERA
  	 mov cx,1    ; SE  IMPRIME UN CARACTER	 
  	 mov ah,9
  	 int 10h
  	 inc CC		;ES EL CONTADOR DE COLUMNAS DEL CICLO INTERNO
  	 		;LONGITUD DEL DISCO DE MAYOR TAMAÑO = NUMERO DE DISCOS X 2  +1	
  	 MOV AH, NUMDIS	     ;LON=LONGITUD IZQUIERDA= NUMERO DE DISCOS
  	 SUB AH, 30H	    ; CONVERSIÓN DE CARACTER A NÚMERO
  	 ADD AH, AH	     ; X2
  	 ADD AH, 1	     ; + 1 
  	 SUB AH, MEN ; LA LONGITUD DE CADA CICLO DISMINUYE EN DOS CADA QUE EL CICLO EX ITERA
  	 cmp CC,AH   ; COMPARA EL CONTADOR DE COLUMNAS CON EL MÁXIMA PARA ESE CICLO
  jne CICLO1
	dec row
	mov dh, incol
	mov col, dh
	INC C1		;CONTADOR DEL CICLO EXTERIOR
	MOV AL, C1	;LA POSICION INICIAL DE LA COLUMNA AUMENTA LAS VECES DEL CONTADOR EXTERNO
	ADD COL, AL
	mov al, 1
	add al, C1
	mov CC, 0
	ADD MEN, 2
	MOV AH, NUMDIS  ;EL ARGUMENTO DERECHO ES EL NUMERO DE DISCOS A GENERARSE
	SUB AH, 30H 
	CMP C1, AH   
JNE TORRE
JMP ORI

FINLIMPIA2:
	JMP FINLIMPIA

INICIO2:
	JMP REINICIAR

ORI:
	CMP GANA, 1
	JE ORIB		;SI EL JUGADOR YA GANO, YA NO IMPRIME EL MENSAJE DAME ORIGEN, SOLO LEE PARA SABER SI SALIR O REINICIAR
	GOTOXY 5,22
	IMPMEN MENORI
	JMP ORIB
    ORIB:
	MOV BAND, 0     ;PERMITE SABER SI SE QUIERE MOVER O COLOCAR UN DISCO
	MOV CLON, 0
	MOV CBOR, 0
	MOV CCOL, 0
	MOV VALORI, 30 ;SI ES DESTINO Y EL ORIGEN SON IGUALES, NO HACE NADA Y PIDE ORIGEN NUEVAMENTE
	JMP INIASICOL

INIASICOL:
	MOV DH, NUMDIS
	SUB DH, 30H
	ADD DH, INCOL
	MOV COL, DH
	MOV ROW, 17  
			
FILTRASICOL:		
	MOV AH, 1
	INT 21H
	CMP VALORI, AL   ; VALORI GUARDA EL CARACTER TECLEADO DEL CICLO ANTERIOR, AL EL DEL ACTUAL, SI ES IGUAL, SALTA A ORI, NO HACE CAMBIOS
	JE ORI
	
	MOV VALORI, AL    ;SI LOS CARACTERES ANTERIORES NO FUERON IGUALES

	CMP AL, 'S'
	;JE FIN2
	JE FINLIMPIA2
	
	CMP AL, 's'
	;JE FIN2
	JE FINLIMPIA2
	
	CMP AL, 'R'
	JE INICIO2
	
	CMP AL, 'r'
	JE INICIO2

	CMP AL, '1'
	JE ASI10

	CMP AL, '2'
	JE ASI20

	CMP AL, '3'
	JE ASI30

JMP FILTRASICOL		;FILTRA LOS CARACTERES DIFERENTES DE A, B O C, no distingue entre mayus y minus

fin2:
     
	mov ah,4ch
      Int 21h

ASI10:
	CMP BAND, 0
	JE ENCDIS
	JNE VALTAM2
	
ASI20:
	ADD COL, 25
	CMP BAND, 0
	JE ENCDIS
	JNE VALTAM2

ASI30:
	ADD COL, 50
	CMP BAND, 0
	JE ENCDIS
	JNE VALTAM2
ORI1:
	JMP ORI

ENCDIS:
	MOV DH, ROW
	MOV DL, COL
	MOV TEMATR, AH  ;AQUI AH CONTIENE EL ATRIBUTO DEL CICLO ANTERIOR
	MOV AH, 2	;AQUI AH ES LA OPCION DE INTERRUPCION
	INT 10H
	
	MOV AH, 8   ;LEE EL ATRIBUTO DEL PIXEL, Y SE GUARDA EN AH
	INT 10H
	
	CMP AH, 8
	JE SALVA
	DEC ROW
	JNE ENCDIS
	
VALTAM2:
	JMP VALTAM
	
SALVA:
   CMP TEMATR, 1   ; SI EL ATRIBUTO DEBAJO DE LA POSICION DONDE LLEGO AL COLOR GRIS DEL PALO ES NEGRO, ENTONCES EL PALO ESTA VACIO
   JZ ERRVAC1
	INC ROW
	MOV DH, ROW
	MOV TEMPY, DH
	MOV DL, COL
	MOV TEMPX, DL
	MOV AH, 2
	INT 10H
	MOV AH, TEMATR
	
LON:	
	DEC COL
	MOV DL, COL
	MOV AH, 2
	INT 10H
	
	MOV AH, 8   ;LEE EL ATRIBUTO DEL PIXEL, Y SE GUARDA EN AH
	INT 10H
	CMP AH, TEMATR
	JE SUMLON
	MOV DH, CLON
	JMP DES
	
ERRVAC1:
	JMP ERRVAC

ORI2:
	JMP ORI1
			
VALTAM:
	 MOV DL, CLON   ;LONGITUD TOTAL DEL DISCO A MOVER, LONGITUD IZQUIERDA X 2 + 1
  	 ADD DL, CLON
  	 ADD DL, 1     	;DL ALMACENA LA LONGITUD TOTAL
  	 MOV LONTOT, DL   ;TERMINA PROCESO PARA GUARDAR LONGITUD, DL QUEDA LIBRE

   GOTOXY COL, ROW
	
	MOV AH, 8   ;LEE EL ATRIBUTO DEL PIXEL, Y SE GUARDA EN AH
	INT 10H
	CMP AH, 8    ;ESTA VACÍA LA TORRE? o TODOS LOS DISCOS VERIFICADOS HAN SIDO MAYORES?
	JE COLOCA1
	CMP AH, TEMATR  ;SI NO ESTA VACIA COMPARA EL ATRIBUTO DEL DISCO DE LA TORRE DESTINO 
	JA ERRTAM		;CON EL ATRIBUTO DEL DISCO A MOVER DE LA TORRE ORIGEN. A MENOR TAMAÑO, MAYOR ATRIBUTO
	DEC ROW
	JMP VALTAM		
	
	MOV AH, 8   ;LEE EL ATRIBUTO DEL PIXEL, Y SE GUARDA EN AH
	INT 10H
	CMP AH, TEMATR
	JE SUMLON
	MOV DH, CLON
	JMP DES
	
SUMLON:
	INC CLON
	JMP LON

ERRVAC:
	
	GOTOXY 0,22
	CLEAR
	GOTOXY 7, 22
	LEA DX, MENERRVAC
	MOV AH, 9
	INT 21H
	MOV AH, 1    ; EXHIBE MENSAJE Y ESPERA A QUE EL USUARIO TECLEE PARA VOLVER A PEDIR ORIGEN
	INT 21H
	GOTOXY 0,22
	CLEAR
	JMP ORI

COLOCA1:
	JMP COLOCA	
ERRTAM:
	GOTOXY 0,22
	CLEAR
	GOTOXY 7, 22
	LEA DX, MENERRTAM
	MOV AH, 9
	INT 21H
	
	MOV AH, 1    ; EXHIBE MENSAJE Y ESPERA A QUE EL USUARIO TECLEE PARA VOLVER A PEDIR ORIGEN
	INT 21H
	GOTOXY 0,22
	CLEAR
	JMP ORI

COLOCA:
    SUB DL, CLON
    GOTOXY DL, ROW
	 SIGUE:
	 ;mov al,'°'   ;coloca el disco en la nueva posicion
	 MOV DL, '°'

  	 MOV BL, TEMATR  ; El color nulo es 0 	 
  	 mov cx,1    ; SE  IMPRIME UN CARACTER	 
  	 mov ah,9
  	 int 10h     
  	 INC CCOL
  	 
  	 MOV AH, 2
  	 INT 21H
  	 
  	 MOV CL,LONTOT
  	 CMP CCOL, CL
JNE SIGUE
	INC CONUNI           ; SE INCREMENTA EL CONTADOR
  
CMP CONUNI, 10
JAE CONVIERTEDEC
  	GOTOXY 76, 4         ;POSICIONA EL CURSOR PARA IMPRIMIR EL CONTADOR DE MOVIMIENTOS
  	IMPRIME CONCEN
  	GOTOXY 77, 4
  	IMPRIME CONDEC
  	GOTOXY 78, 4
  	IMPRIME CONUNI
 JMP BORRA2
 
ORI3:
	JMP ORI2  

CONVIERTEDEC:
	INC CONDEC
	MOV CONUNI, 0
	CMP CONDEC, 10
	JAE CONVIERTECEN
	GOTOXY 76, 4         ;POSICIONA EL CURSOR PARA IMPRIMIR EL CONTADOR DE MOVIMIENTOS
	IMPRIME CONCEN
	GOTOXY 77, 4
	IMPRIME CONDEC
  	GOTOXY 78, 4
  	IMPRIME CONUNI
JMP BORRA2
	
CONVIERTECEN:
	INC CONCEN
	MOV CONDEC, 0
	GOTOXY 76, 4         ;POSICIONA EL CURSOR PARA IMPRIMIR EL CONTADOR DE MOVIMIENTOS
	IMPRIME CONCEN
	GOTOXY 77, 4
	IMPRIME CONDEC
  	GOTOXY 78, 4
  	IMPRIME CONUNI
	
BORRA2:
  JMP BORRA
  


ORI4:
	JMP ORI3
  
BORRA:
    MOV CL, CLON
    SUB TEMPX, CL
    GOTOXY TEMPX, TEMPY
	 SIGUE2:
	 mov al,'°'   ;borra el disco de su posicion original
	 MOV DL, '°'
  	 MOV BL, 0  ; El color nulo es 0 	 
  	 mov cx,1    ; SE  IMPRIME UN CARACTER	 
  	 mov ah,9
  	 int 10h
  	 INC CBOR
  	 
  	 MOV AH, 2
  	 INT 21H
  	 
  	 MOV CL,LONTOT
  	 CMP CBOR, CL
  JNE SIGUE2
  MOV CL, CLON
  ADD TEMPX, CL
  GOTOXY TEMPX, TEMPY
  	 mov al,'°'   ;borra el disco de su posicion original
	 MOV DL, '°'
  	 MOV BL, 8  ; COLOCA LA PARTE DEL PALO DE LA TORRE DEL DISCO QUITADO 	 
  	 mov cx,1    ; SE  IMPRIME UN CARACTER	 
  	 mov ah,9
  	 int 10h
  	 MOV AH, 2
  	 INT 21H
  	JMP FINJUEGO
  	;JMP ORI3
  
ORI5:
	JMP ORI4
	
DES:
	GOTOXY 35,22
	LEA DX, MENDES
	MOV AH, 9
	INT 21H
	MOV BAND, 1     ;PERMITE SABER SI SE QUIERE MOVER O COLOCAR UN DISCO
	JMP INIASICOL

FINJUEGO:
	INIASI
	GOTOXY COL, ROW
	MOV AH, 8   ;LEE EL ATRIBUTO DEL PIXEL, Y SE GUARDA EN AH
	INT 10H
	CMP AH, 8
	JNE ORI5   
	INIASI
	ADD COL, 25
	GOTOXY COL, ROW
	MOV AH, 8   ;LEE EL ATRIBUTO DEL PIXEL, Y SE GUARDA EN AH
	INT 10H
	CMP AH, 8
	JNE ORI5
	JMP GANADOR

GANADOR:
	GOTOXY 0,22
	CLEAR
	GOTOXY 7, 22
	IMPMEN MENGAN
	MOV GANA, 1
	;LEA DX, MENGAN
	;MOV AH, 9
	;INT 21H
	JMP HORA
	;MOV AH, 1    ; EXHIBE MENSAJE Y ESPERA A QUE EL USUARIO TECLEE PARA VOLVER A PEDIR ORIGEN
	;INT 21H
	;JMP HORA
	
ORI6:
	JMP ORI5
	
HORA:
	GOTOXY 5, 4	;IMPRIME ETIQUETA TIEMPO
	LEA DX, MENTIE
	MOV AH, 9
	INT 21H
	mov ah, 2ch  ;lee la hora del sistema DESPUÉS DE QUE ACABÓ EL JUEGO
	int 21h
	MOV FINHOR, CH
	MOV FINMIN, CL
	MOV FINSEG, DH
	MOV DL, INIHOR
	CMP DL, FINHOR
	JE IGUHOR
	
	GOTOXY 15, 4
	LEA DX, MENHOR
	MOV AH, 9
	INT 21H
	MOV AL, FINHOR
	SUB AL, INIHOR
	IMPTIE AL
	
	MOV DL, INISEG
	CMP DL, FINSEG
	JB IGUMIN2
	
IGUHOR:
	MOV DL, INIMIN
	CMP DL, FINMIN
	JE IGUMIN2
	INC DL
	CMP DL, FINMIN
	JE MEN1M
	JMP MAS1M
	
ORI7:
	JMP ORI6

MAS1M:
	GOTOXY 25, 4
	IMPMEN MENMIN
	MOV DL, INISEG
	CMP DL, FINSEG
	JA IMPMAS1MMAS
	JNA IMPMAS1MEN
	
IMPMAS1MMAS:
	MOV AL, FINMIN
	SUB AL, INIMIN
	DEC AL
	IMPTIE AL
	JMP MEN1M
	
IMPMAS1MEN:
	MOV AL, FINMIN
	SUB AL, INIMIN
	IMPTIE AL
	JMP IGUMIN

IGUMIN2:
	JMP IGUMIN
	
MEN1M:
	GOTOXY 35, 4
	IMPMEN MENSEG
	MOV AL, 60
	SUB AL, INISEG
	ADD AL, FINSEG
	IMPTIE AL
	JMP ORI7
	
IGUMIN:
	GOTOXY 35, 4
	IMPMEN MENSEG
	MOV al, FINSEG
	SUB al, INISEG
	IMPTIE al
	JMP ORI7
fin:
  	MOV AH, 1       
  	INT 21H
	mov ah,4ch
      Int 21h
.stack
end inicio
	

	
